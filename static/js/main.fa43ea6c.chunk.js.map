{"version":3,"sources":["ProTip.js","Header.js","HeaderSection.js","MoneyTextQuestion.js","CheckboxQuestion.js","Section.js","NumberQuestion.js","OptionalSection.js","QuestionContainer.js","Summary.js","ParentApp.js","App.js","theme.js","index.js"],"names":["makeStyles","theme","root","margin","spacing","lightBulb","verticalAlign","marginRight","Header","className","Component","IncomeSection","props","title","src","getSectionType","value","total","displayType","thousandSeparator","prefix","childrenAmount","NumberFormatCustom","inputRef","onChange","other","getInputRef","onValueChange","values","target","isNumericString","MoneyTextQuestion","name","React","useState","numberformat","setValues","questionTitle","icons","questionSubtitle","capText","TextField","fullWidth","label","variant","event","Number","id","cap","InputProps","inputComponent","CheckboxQuestion","handleChange","setState","state","disabledIndividual","hasDisabledChildrenFunc","this","FormControlLabel","control","Checkbox","checked","color","Section","getTotalAmount","totalIncome","totalIndividualRelief","totalMarriedRelief","incomeQuestionIcons","individualReliefQuestionIcons","incomeQuestions","getGrossIncome","getOtherIncome","taxReliefQuestions","getTotalRelief","NumberQuestion","selected","setSelected","moreThanFive","setMoreThanFive","onNumberClicked","amount","console","log","parseInt","defaultButtonGroup","ButtonGroup","aria-label","Button","onClick","baseQuestion","elements","i","push","amountToDisplay","getChildrenRemainingAmount","type","OptionalSection","marriedReliefIcons","childrenReliefIcons","marriedReliefQuestions","childrenAmountToShow","hasDisabledChildren","childrenAmountToDisplay","schoolChildrenToDisplay","collegeChildrenToDisplay","uniChildrenToDisplay","disabledChildren","childrenReliefQuestions","answer","size","handleOnYesClicked","handleOnNoClicked","totalRelief","getQuestions","QuestionContainer","handleOnYesMarriedClicked","handleOnNoMarriedClicked","married","totalChildrenRelief","handleOnYesChildrenClicked","handleOnNoChildrenClicked","children","Summary","handleClick","getTaxAmount","incomeTaxable","toFixed","getSavingsFromRelief","netChargeableIncome","getTaxPaid","getMonthlyTaxPaid","selfDependent","epfAndSocso","lifeAndMedical","lifestyleAndEducation","disabled","totalTaxRelief","href","ParentApp","showSummary","grossIncome","otherIncome","lifeInsuranceRelief","medicalInsuranceRelief","lifestyleRelief","educationRelief","disabledIndividualRelief","prsRelief","disabledSpouse","workingSpouse","disabledChildrenAmount","schoolChildren","collegeChildren","uniChildren","disabledUniChildren","sspnRelief","childcareRelief","prevState","cappedRelief","showSummarySection","updateTotalIncome","hasDisabled","startIcon","useStyles","box","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.fa43ea6c.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Typography from '@material-ui/core/Typography';\n\nfunction LightBulbIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M9 21c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H9v1zm3-19C8.14 2 5 5.14 5 9c0 2.38 1.19 4.47 3 5.74V17c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2.26c1.81-1.27 3-3.36 3-5.74 0-3.86-3.14-7-7-7zm2.85 11.1l-.85.6V16h-4v-2.3l-.85-.6C7.8 12.16 7 10.63 7 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 1.63-.8 3.16-2.15 4.1z\" />\n    </SvgIcon>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(6, 0, 3),\n  },\n  lightBulb: {\n    verticalAlign: 'middle',\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default function ProTip() {\n  const classes = useStyles();\n  return (\n    <Typography className={classes.root} color=\"textSecondary\">\n      <LightBulbIcon className={classes.lightBulb} />\n      Pro tip: See more{' '}\n      <Link href=\"https://material-ui.com/getting-started/templates/\">templates</Link> on the\n      Material-UI documentation.\n    </Typography>\n  );\n}\n","import React, { Component, PropTypes } from 'react';\nimport { render } from 'react-dom';\n\nexport default class Header extends Component {\n    \n    render() {\n        return (\n            <div className=\"headerDiv\">\n            <header className=\"main-header\">\n            <h1>Adrian's Personal Tax Calculator</h1>\n            </header>\n            </div>\n          \n        );\n    }\n  \n  }","import React, { Component, PropTypes } from 'react';\nimport NumberFormat from 'react-number-format';\n\nfunction returnIcon(title) {\n    if (title === \"Income\") {\n        return (\n            <img className=\"headerIcons\" src=\"assets/dollar.svg\"></img>\n        )\n    } else if (title === \"Individual Tax Relief\") {\n        return (\n            <div className=\"inline-block\">\n                <img className=\"headerIcons\" src=\"assets/tax.svg\"></img>\n                <img className=\"headerIcons\" src=\"assets/one.svg\"></img>\n            </div>\n        )\n    } else if (title === \"Married Tax Relief\") {\n        return (\n            <div className=\"inline-block\">\n                <img className=\"headerIcons\" src=\"assets/tax.svg\"></img>\n                <img className=\"headerIcons\" src=\"assets/married.svg\"></img>\n            </div>\n        )\n    } else if (title === \"Children Tax Relief\") {\n        return (\n            <div className=\"inline-block\">\n                <img className=\"headerIcons\" src=\"assets/tax.svg\"></img>\n                <img className=\"headerIcons\" src=\"assets/family.svg\"></img>\n            </div>\n        )\n    }\n}\n\nfunction getSectionType(title) {\n    if (title === \"Income\") {\n        return \"Total Income : \"\n    } else if (title === \"Individual Tax Relief\" || title === \"Married Tax Relief\" || title === \"Children Tax Relief\") {\n        return \"Total Relief : \"\n    }\n}\n\nexport default function IncomeSection(props) {\n\n        return (\n            <div className=\"headerSection b-border\">\n                <h3>{props.title}\n                {returnIcon(props.title)}\n                <div className=\"total\">\n                        <h6>\n                            {getSectionType(props.title)}\n                            <div>\n                            <NumberFormat value={props.total} displayType={'text'} thousandSeparator={true} prefix={'RM '} />\n                            {props.title === \"Children Tax Relief\" ?\n                                <h6>No of Children : {props.childrenAmount}</h6>\n                            :\n                                null\n                            }\n                            \n                            </div>\n                        </h6>\n                    </div>\n                </h3>\n\n                \n\n            </div>\n          \n        );\n  \n  }","import React, { Component, PropTypes } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport NumberFormat from 'react-number-format';\n\nfunction NumberFormatCustom(props) {\n    const { inputRef, onChange, ...other } = props;\n  \n    return (\n      <NumberFormat\n        {...other}\n        getInputRef={inputRef}\n        onValueChange={values => {\n          onChange({\n            target: {\n              value: values.value,\n            },\n          });\n        }}\n        thousandSeparator\n        isNumericString\n        prefix=\"RM \"\n      />\n    );\n  }\n  \n//   NumberFormatCustom.propTypes = {\n//     inputRef: PropTypes.func.isRequired,\n//     onChange: PropTypes.func.isRequired,\n//   };\n\n\nexport default function MoneyTextQuestion(props) {\n\n    const [values, setValues] = React.useState({\n        numberformat: '',\n      });\n\n    const handleChange = name => event => {\n        setValues({\n          ...values,\n          [name]: event.target.value, \n        });\n\n        props.total(Number(event.target.value), props.id, props.cap)\n      };\n\n        return (\n            <div className=\"horizontalRow \">  \n\n                <div className=\"questionText question-bottom-border\">\n                    <h4>{props.questionTitle}  {props.icons}</h4>\n                    <div className=\"subtitles\">\n                      {props.questionSubtitle}\n                      &nbsp;\n                        <div className=\"capText\">\n                          {props.capText}\n                        </div>\n                      </div>\n                </div>\n                \n               \n\n                <div className=\"incomeInput\">\n                <TextField\n                    fullWidth\n                    label={props.label}\n                    variant=\"outlined\"\n                    value={values.numberformat}\n                    onChange={handleChange('numberformat')}\n                    id=\"formatted-numberformat-input\"\n                    InputProps={{\n                        inputComponent: NumberFormatCustom,\n                    }}\n                />\n                </div>\n              \n            </div>\n          \n        );\n}","import React, { Component, PropTypes } from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nclass CheckboxQuestion extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            disabledIndividual: false,\n        };\n    }\n\n    handleChange = name => event => {\n          if (name) {\n            this.setState({ ...this.state, disabledIndividual: true });     \n            if (this.props.total != null)  {\n              this.props.total(this.props.cap, this.props.id, this.props.cap)\n            } else {\n              this.props.hasDisabledChildrenFunc(true)\n            }\n            \n          } else {\n            this.setState({ ...this.state, disabledIndividual: false });\n            if (this.props.total != null)  {\n              this.props.total(0, this.props.id, this.props.cap)\n            } else {\n              this.props.hasDisabledChildrenFunc(false)\n            }\n            \n          }\n\n          \n      };\n\n    render()   {\n        return (\n            <div className=\"horizontalRow \">  \n    \n            <div className=\"questionText question-bottom-border\">\n                <h4>{this.props.questionTitle}  {this.props.icons}</h4>\n                <div className=\"subtitles\">\n                  {this.props.questionSubtitle}\n                    <div className=\"capText\">\n                      {this.props.capText}\n                    </div>\n                  </div>\n            </div>\n            \n            <div className=\"checkboxInput\">\n            <FormControlLabel\n            control={\n              <Checkbox\n                checked={this.state.disabledIndividual}\n                onChange={this.handleChange(true)}\n                value=\"checkedA\"\n                color=\"primary\"\n              />\n            }\n            label=\"Yes\"\n          />\n    \n            <FormControlLabel\n            control={\n              <Checkbox\n                checked={!this.state.disabledIndividual}\n                onChange={this.handleChange(false)}\n                value=\"checkedB\"\n                color=\"secondary\"\n              />\n            }\n            label=\"No\"\n          />\n            </div>\n          \n        </div>\n        );\n    }\n    \n}\n\nexport default CheckboxQuestion;","import React, { Component, PropTypes } from 'react';\nimport HeaderSection from './HeaderSection';\nimport MoneyTextQuestion from './MoneyTextQuestion';\nimport CheckboxQuestion from './CheckboxQuestion';\n\nclass Section extends Component {\n\n    constructor(props) {\n        super(props);\n    } \n\n    getTotalAmount = (title)  => {\n        if (title === \"Income\") {\n         return this.props.totalIncome\n        } else if (title === \"Individual Tax Relief\"){\n         return this.props.totalIndividualRelief\n        } else if (title === \"Married Tax Relief\") {\n            return this.props.totalMarriedRelief\n        }\n    }\n\n\n    render() {\n\n        const incomeQuestionIcons = (\n            <div className=\"questionIcon\"><img src=\"assets/dollar.svg\"></img> </div>\n        )\n        \n        const individualReliefQuestionIcons = (\n            <div className=\"questionIcon\"><img src=\"assets/tax.svg\"></img> <img src=\"assets/one.svg\"></img></div>\n        )\n        \n        const incomeQuestions = (\n            <div>\n            <MoneyTextQuestion\n            id = \"grossAnnualIncome\" \n            questionTitle=\"Estimate your Gross Annual Income\" \n            questionSubtitle=\"includes bonuses and allowances before any deductions\"\n            label=\"Gross Income\"\n            icons={incomeQuestionIcons}\n            total={this.props.getGrossIncome}\n            />\n        \n            <MoneyTextQuestion \n            id = \"otherIncome\" \n            questionTitle=\"Estimate your Other Income\" \n            questionSubtitle=\"includes taxable dividends, rent and business income\"\n            label=\"Total Other Income\"\n            icons={incomeQuestionIcons}\n            total={this.props.getOtherIncome}\n            />\n            </div>\n        )\n        \n        const taxReliefQuestions = (\n            <div>\n        \n            <MoneyTextQuestion\n            id=\"lifeInsuranceRelief\" \n            questionTitle=\"Life Insurance Premiums\" \n            questionSubtitle=\"total paid for the year\"\n            capText=\"(capped at RM 3,000)\"\n            cap={3000}\n            label=\"Life Insurance Premiums\"\n            icons={individualReliefQuestionIcons}\n            total={this.props.getTotalRelief}\n            />\n        \n            <MoneyTextQuestion \n            id=\"medicalInsuranceRelief\"\n            questionTitle=\"Medical and Education Insurance Premium\" \n            questionSubtitle=\"total paid for the year\"\n            capText=\"(capped at RM 3000)\"\n            cap={3000}\n            label=\"Medical & Education\"\n            icons={individualReliefQuestionIcons}\n            total={this.props.getTotalRelief}/>\n            \n            <MoneyTextQuestion \n            id=\"lifestyleRelief\"\n            questionTitle=\"Lifestyle Expenses\" \n            questionSubtitle=\"Books and magazines, PC or smartphone, sports equipment or gym membership, internet subscription\"\n            capText=\"(capped at RM 2,500)\"\n            cap={2500}\n            label=\"Lifestyle Expenses\"\n            icons={individualReliefQuestionIcons}\n            total={this.props.getTotalRelief}/>\n        \n            <MoneyTextQuestion \n            id=\"educationRelief\"\n            questionTitle=\"Education fees\" \n            questionSubtitle=\"Degree, Masters or PhD level\"\n            capText=\"(capped at RM 7,000)\"\n            cap={7000}\n            label=\"Education fees\"\n            icons={individualReliefQuestionIcons}\n            total={this.props.getTotalRelief}/>\n        \n            <CheckboxQuestion \n            id=\"disabledIndividualRelief\"\n            questionTitle=\"Are you a disabled individual?\" \n            questionSubtitle=\"\"\n            capText=\"(fixed at RM 6,000)\"\n            cap={6000}\n            label={[\"Yes\",\"No\"]}\n            icons={individualReliefQuestionIcons}\n            total={this.props.getTotalRelief}/>\n            \n\n            <MoneyTextQuestion \n            id=\"prsRelief\"\n            questionTitle=\"PRS Contributions\" \n            questionSubtitle=\"contributions to a private retirement scheme (until 2021)\"\n            capText=\"(capped at RM 3,000)\"\n            cap={3000}\n            label=\"PRS Contributions\"\n            icons={individualReliefQuestionIcons}\n            total={this.props.getTotalRelief}/>\n            </div>\n        )\n        \n        function getQuestions(title) {\n            if (title === \"Income\") {\n                return incomeQuestions\n            } else if (title === \"Individual Tax Relief\") {\n                return taxReliefQuestions\n            }\n        }\n        \n        return (\n            <div className=\"section\">\n                <HeaderSection\n                title={this.props.title}\n                icons={this.props.title}\n                total={this.getTotalAmount(this.props.title)}\n                />\n\n                {getQuestions(this.props.title)}\n\n            </div>\n          \n        );\n    }\n        \n  \n  }\n\n  export default Section;","import React, { useState, PropTypes } from 'react';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function NumberQuestion(props) {\n\n    const [selected, setSelected] = useState(0);\n    const [moreThanFive, setMoreThanFive] = useState(false);\n\n    const isMoreThanFive = () => {\n        setMoreThanFive(true)\n        // setSelected(0)\n    }\n\n    // const onNumberClickedBaseQuestion = (amount) =>{\n    //     setSelected(amount)\n    //     setMoreThanFive(false)\n        \n    //     props.total(parseInt(amount), props.id, 0)\n        \n        \n    //     // console.log(id)\n    // }\n\n    const onNumberClicked = (amount) =>{\n        setSelected(amount)\n        setMoreThanFive(false)\n        console.log('amount clicked : ' + amount)\n        props.total(parseInt(amount), props.id, 0)\n        \n        \n        // console.log(id)\n    }\n\n    const onAmountChanged = amount => event => {\n        setSelected(event.target.value);\n\n        props.total(event.target.value, props.id, 0)\n        \n\n        // console.log(event.target.value)\n    }\n\n    const buttonGroup = (\n        <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n\n        </ButtonGroup>\n    ) \n\n    const defaultButtonGroup = (\n        <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n            <Button id={1} variant={selected == 1 ? \"contained\" : \"\"} onClick={(id) => onNumberClicked(1)}>1</Button>\n            <Button id={2} variant={selected == 2 ? \"contained\" : \"\"} onClick={(id) => onNumberClicked(2)}>2</Button>\n            <Button id={3} variant={selected == 3 ? \"contained\" : \"\"} onClick={(id) => onNumberClicked(3)}>3</Button>\n            <Button id={4} variant={selected == 4 ? \"contained\" : \"\"} onClick={(id) => onNumberClicked(4)}>4</Button>\n            <Button id={5} variant={selected == 5 ? \"contained\" : \"\"} onClick={(id) => onNumberClicked(5)}>5</Button>\n            <Button id={0} variant={moreThanFive ? \"contained\" : \"\"} onClick={(id) => isMoreThanFive()}>>5</Button>\n        </ButtonGroup>\n    )\n\n    const getChildrenRemainingAmount = () => {\n\n        if (props.baseQuestion) {\n            // console.log('is zero')\n            return defaultButtonGroup\n        } else if (props.childrenAmount > 0){\n            // console.log('children : ' +  props.childrenAmountToDisplay)\n            var elements = []\n\n                for (let i = 0; i < props.amountToDisplay + 1; i++) {\n                \n                    elements.push(<Button variant={selected == i ? \"contained\" : \"\"} onClick={() => onNumberClicked(i)}>{i}</Button>)\n                }\n                //TODO add function to minus from children amount to be shown \n    \n            return (\n                <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n                    {elements}\n                </ButtonGroup>\n                \n            )\n        }       \n    }\n        \n\n        return (\n            <div className=\"horizontalRow\">\n                <div className=\"questionText question-bottom-border\">\n                    <h4>{props.questionTitle}</h4>\n                    <div className=\"subtitles\">\n                      {props.questionSubtitle}\n                      &nbsp;\n                        <div className=\"capText\">\n                          {props.capText}\n                        </div>\n                      </div>\n                </div>\n\n                <div className=\"padding-top-40 float-right\">\n               \n                {getChildrenRemainingAmount()}\n               \n                {moreThanFive ? \n                <div className=\"margin-top-10\">\n                    <TextField\n                        // fullWidth\n                        label={props.label}\n                        type=\"number\"\n                        // label=\"Amount of children\"\n                        variant=\"outlined\"\n                        value={selected}\n                        onChange={onAmountChanged('selected')}\n                        id=\"optional-input\"\n                    />\n                </div>\n                :\n                    null\n                } \n\n                </div>\n            </div>\n        );\n    \n\n}","import React, { Component, PropTypes } from 'react';\nimport HeaderSection from './HeaderSection';\nimport Button from '@material-ui/core/Button';\nimport MoneyTextQuestion from './MoneyTextQuestion';\nimport CheckboxQuestion from './CheckboxQuestion';\nimport NumberQuestion from './NumberQuestion';\n\nclass OptionalSection extends Component {\n\n    constructor(props) {\n        super(props);\n    } \n\n    marriedReliefIcons = (\n        <div className=\"questionIcon\">\n        <img className=\"headerIcons\" src=\"assets/tax.svg\"></img>\n        <img className=\"headerIcons\" src=\"assets/married.svg\"></img>\n        </div>\n    )\n\n    childrenReliefIcons = (\n        <div className=\"questionIcon\">\n        <img className=\"headerIcons\" src=\"assets/tax.svg\"></img>\n        <img className=\"headerIcons\" src=\"assets/family.svg\"></img>\n        </div>\n    )\n\n    marriedReliefQuestions = (\n        <div>\n        <CheckboxQuestion\n        id = \"disabledSpouse\" \n        questionTitle=\"Is your spouse disabled?\" \n        questionSubtitle=\"\"\n        capText=\"(fixed at RM 3500)\"\n        cap={3500}\n        label=\"Disabled spouse\"\n        icons={this.marriedReliefIcons}\n        total={this.props.getTotalRelief}\n        />\n\n\n        </div>\n    )\n\n    childrenReliefQuestions(childrenAmount, childrenAmountToShow, hasDisabledChildren)  {\n            return (\n\n            <div>\n            <NumberQuestion \n            id = \"childrenAmount\" \n            questionTitle=\"How many children do you have?\" \n            questionSubtitle=\"of any age\"\n            cap={0}\n            total={this.props.getTotalRelief}\n            label=\"Amount of children\"\n            childrenAmountToDisplay={childrenAmountToShow}\n            childrenAmount={childrenAmount}\n            baseQuestion={true}\n            />\n\n            {childrenAmount > 0 ?\n                <div>\n                <NumberQuestion \n                id = \"schoolChildren\" \n                questionTitle=\"How many are under 18 years of age\" \n                questionSubtitle=\"unmarried children\"\n                capText=\"(RM 2,000 per child)\"\n                cap={0}\n                total={this.props.getTotalRelief}\n                label=\"Amount of children\"\n                childrenAmount={childrenAmount}\n                baseQuestion={false}\n                amountToDisplay={this.props.schoolChildrenToDisplay}\n                />\n    \n                <NumberQuestion \n                id = \"collegeChildren\" \n                questionTitle=\"How many are above 18 years of age and are undergoing pre-university education\" \n                questionSubtitle=\"A-Levels, STPM, Matriculation\"\n                capText=\"(RM 2,000 per child)\"\n                cap={0}\n                total={this.props.getTotalRelief}\n                label=\"Amount of children\"\n                childrenAmount={childrenAmount}\n                baseQuestion={false}\n                amountToDisplay={this.props.collegeChildrenToDisplay}\n                />\n    \n                <NumberQuestion \n                id = \"uniChildren\" \n                questionTitle=\"How many are above 18 years of age and are undergoing university education\" \n                questionSubtitle=\"Diploma, Degree, Masters, Doctorate\"\n                capText=\"(RM 8,000 per child)\"\n                cap={0}\n                total={this.props.getTotalRelief}\n                label=\"Amount of children\"\n                childrenAmount={childrenAmount}\n                baseQuestion={false}\n                amountToDisplay={this.props.uniChildrenToDisplay}\n                />\n                \n                <MoneyTextQuestion \n                id = \"sspnRelief\" \n                questionTitle=\"Net saving in SSPN's scheme\" \n                questionSubtitle=\"total deposit for last year MINUS total withdrawal in the last year\"\n                label=\"SSPN Deposits\"\n                cap={6000}\n                capText=\"(capped at RM 6,000)\"\n                total={this.props.getTotalRelief}                \n                />\n\n                <MoneyTextQuestion \n                id = \"childcareRelief\" \n                questionTitle=\"Amount spent for childcare\" \n                questionSubtitle=\"total spent in kindergarten or child care centre\"\n                label=\"Childcare Cost\"\n                cap={1000}\n                capText=\"(capped at RM 1,000)\"\n                total={this.props.getTotalRelief}                \n                />\n\n                <CheckboxQuestion \n                id = \"hasDisabledChildren\" \n                questionTitle=\"Do you have any disabled children?\" \n                questionSubtitle=\"\"\n                capText=\"\"\n                cap={0}\n                total={null}\n                hasDisabledChildrenFunc={this.props.hasDisabledChildrenFunc}\n                />               \n\n                {hasDisabledChildren ?\n                    <div>\n                    \n                    <NumberQuestion \n                    id = \"disabledChildren\" \n                    questionTitle=\"How many are disabled?\"\n                    questionSubtitle=\"\"\n                    capText=\"(RM 6,000 per child)\"\n                    cap={6000}\n                    total={this.props.getTotalRelief}\n                    label=\"Amount of children\"\n                    childrenAmount={childrenAmount}\n                    baseQuestion={false}\n                    amountToDisplay={childrenAmount}\n                    />\n\n                    <NumberQuestion \n                    id = \"disabledUniChildren\" \n                    questionTitle=\"How many are currently undergoing higher education?\"\n                    questionSubtitle=\"\"\n                    capText=\"(RM 8,000 per child)\"\n                    cap={8000}\n                    total={this.props.getTotalRelief}\n                    label=\"Amount of children\"\n                    childrenAmount={childrenAmount}\n                    baseQuestion={false}\n                    amountToDisplay={this.props.disabledChildren}\n                    />\n\n                    </div>\n                :\n                    null\n                }\n\n                </div>\n                :\n                null\n            }                            \n           \n            </div>   \n            )\n    }\n        \n    \n\n    getQuestions(title, childrenAmount, childrenAmountToShow, hasDisabledChildren) {\n        if (title === \"Married Tax Relief\") {\n            return this.marriedReliefQuestions\n        } else if (title === \"Children Tax Relief\") {\n            return this.childrenReliefQuestions(childrenAmount, childrenAmountToShow, hasDisabledChildren) \n        }\n    }\n\n    render() {\n        return (\n            <div className=\"optionalSectionHeader\">\n                <span >\n                    <h5 className={(this.props.answer ? 'bottom-padding-20 b-border-black' : '')}>\n                        {this.props.questionTitle}\n                        <span className=\"optionalSectionButtons\">\n                        {this.props.answer ?\n                            <div className=\"optionalSectionButtons margin-right-20\">\n                            <Button className=\"optionalButton\" variant=\"contained\" color=\"primary\" size=\"large\" onClick={this.props.handleOnYesClicked}>\n                            Yes\n                            </Button> \n\n                            <Button className=\"optionalButton\" variant=\"outlined\" color=\"secondary\" size=\"large\" onClick={this.props.handleOnNoClicked}>\n                            No\n                            </Button>  \n                            </div>\n                            : \n                            <div className=\"optionalSectionButtons\">\n                            <Button className=\"optionalButton\" variant=\"outlined\" color=\"primary\" size=\"large\" onClick={this.props.handleOnYesClicked}>\n                            Yes\n                            </Button> \n\n                            <Button className=\"optionalButton\" variant=\"contained\" color=\"secondary\" size=\"large\" onClick={this.props.handleOnNoClicked}>\n                            No\n                            </Button>  \n                            </div>\n                        }    \n                       \n                    </span>\n                    </h5>\n                </span>\n\n                {this.props.answer ?\n                <div className=\"optionalSectionContainer\">\n                    <HeaderSection\n                    title={this.props.title}\n                    icons={this.props.title}\n                    total={this.props.totalRelief}\n                    childrenAmount={this.props.childrenAmount}\n                    />\n\n                    {this.getQuestions(this.props.title, this.props.childrenAmount, this.props.childrenAmountToShow, this.props.hasDisabledChildren)}\n                 </div>   \n                    :\n                    null\n                }\n\n            \n            </div>\n        );\n    }\n\n}\n\nexport default OptionalSection;","import React, { Component, PropTypes } from 'react';\nimport Section from './Section';\nimport OptionalSection from './OptionalSection';\n\n\nexport default class QuestionContainer extends Component {\n\n    constructor(props) {\n        super(props);\n    } \n\n    render() {\n        return (\n            <div >\n\n                <div className=\"questionContainer\">\n                <Section title=\"Income\" \n                totalIncome={this.props.totalIncome}\n                getGrossIncome={this.props.getGrossIncome}\n                getOtherIncome={this.props.getOtherIncome}\n                />\n                </div>\n                \n                <div className=\"questionContainerSubsequent\">\n                <Section \n                title=\"Individual Tax Relief\"\n                getTotalRelief={this.props.getTotalRelief}\n                totalIndividualRelief={this.props.totalIndividualRelief}\n                />\n                </div>\n\n                <div className=\"questionContainerSubsequent\">\n                <OptionalSection\n                questionTitle=\"Are you married?\" \n                title=\"Married Tax Relief\"\n                getTotalRelief={this.props.getTotalRelief}\n                totalRelief={this.props.totalMarriedRelief}\n                handleOnYesClicked={this.props.handleOnYesMarriedClicked}\n                handleOnNoClicked={this.props.handleOnNoMarriedClicked}\n                answer={this.props.married}\n                />\n                </div>\n                \n                <div className=\"questionContainerSubsequent\">\n                <OptionalSection\n                questionTitle=\"Do you have Children?\" \n                title=\"Children Tax Relief\"\n                getTotalRelief={this.props.getTotalRelief}\n                totalRelief={this.props.totalChildrenRelief}\n                handleOnYesClicked={this.props.handleOnYesChildrenClicked}\n                handleOnNoClicked={this.props.handleOnNoChildrenClicked}\n                answer={this.props.children}\n                childrenAmount={this.props.childrenAmount}\n                schoolChildrenToDisplay={this.props.schoolChildrenToDisplay}\n                collegeChildrenToDisplay={this.props.collegeChildrenToDisplay}\n                uniChildrenToDisplay={this.props.uniChildrenToDisplay}\n                hasDisabledChildren={this.props.hasDisabledChildren}\n                hasDisabledChildrenFunc={this.props.hasDisabledChildrenFunc}\n                disabledChildren={this.props.disabledChildren}\n                />\n                </div>\n                \n\n                \n\n            </div>\n          \n        );\n    }\n  \n  }","import React, { Component, PropTypes } from 'react';\nimport NumberFormat from 'react-number-format';\n\n\nclass Summary extends Component {\n\n    handleClick = () => {\n        \n    }\n\n    getTaxAmount = (incomeTaxable) => {\n        console.log(\"income \" + incomeTaxable)\n        if (incomeTaxable > 0 && incomeTaxable <= 5000) {\n            return 0;\n        } else if (incomeTaxable > 5000 && incomeTaxable <= 20000) {\n            return (0.01 * incomeTaxable).toFixed(2);\n        } else if (incomeTaxable > 20000 && incomeTaxable <= 35000) {\n            return (150 + (0.03 * (incomeTaxable-20000))).toFixed(2);\n        } else if (incomeTaxable > 35000 && incomeTaxable <= 50000) {\n            return (600 + (0.08 * (incomeTaxable-35000))).toFixed(2);\n        } else if (incomeTaxable > 50000 && incomeTaxable <= 70000) {\n            return (1800 + (0.14 * (incomeTaxable-50000))).toFixed(2);\n        } else if (incomeTaxable > 70000 && incomeTaxable <= 100000) {\n            return (4600 + (0.21 * (incomeTaxable-70000))).toFixed(2);\n        } else if (incomeTaxable > 100000 && incomeTaxable <= 250000) {\n            return (10900 + (0.24 * (incomeTaxable-100000))).toFixed(2);\n        } else if (incomeTaxable > 250000 && incomeTaxable <= 400000) {\n            return (46900 + (0.245 * (incomeTaxable-250000))).toFixed(2);\n        } else if (incomeTaxable > 400000 && incomeTaxable <= 600000) {\n            return (83650 + (0.25 * (incomeTaxable-400000))).toFixed(2);\n        } else if (incomeTaxable > 600000 && incomeTaxable <= 1000000) {\n            return (133650 + (0.26 * (incomeTaxable-600000))).toFixed(2);\n        } else if (incomeTaxable > 1000000 && incomeTaxable <= 2000000) {\n            return (237650 + (0.28 * (incomeTaxable-600000))).toFixed(2);\n        } else {\n            return (517650 + (0.30 * (incomeTaxable-2000000))).toFixed(2);\n        }\n    }\n\n    getSavingsFromRelief = () => {\n        return (this.getTaxAmount(this.props.totalIncome) - this.getTaxAmount(this.props.netChargeableIncome)).toFixed(2)\n    }\n\n    getTaxPaid = () => {\n        return ((this.getTaxAmount(this.props.netChargeableIncome)/this.props.netChargeableIncome) * 100).toFixed(2)\n    }\n\n    getMonthlyTaxPaid = () => {\n        return (this.getTaxAmount(this.props.netChargeableIncome)/12).toFixed(2)\n    }\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"summarySection b-border\">\n                <h3>Summary</h3>\n\n                <div className=\"breakdown\">\n                    <h4>Breakdown of gross income and tax relief</h4>\n\n                    <div className=\"listContainer\">\n                        <ul className=\"unorderedList\">\n                            <li className=\"listItem summaryBorder\">\n                                <h6 className=\"listItemTitle\">Total income before deductions : </h6>\n                                <span className=\"listItemAmount\">\n                                    <b><NumberFormat value={this.props.totalIncome} displayType={'text'} thousandSeparator={true} prefix={'RM '} /></b>\n                                </span>\n                            </li>\n\n                            <li className=\"listItem\">\n                                <h6 className=\"listItemTitle\">Tax relief </h6>\n                            </li>\n\n                            <li className=\"listItem\">\n                                <span className=\"listItemTitle\">Individual dependent relief</span>\n                                <span className=\"listItemAmount\">\n                                    <NumberFormat value={this.props.selfDependent} displayType={'text'} thousandSeparator={true} prefix={'RM '} />\n                                </span>\n                            </li>\n\n                            <li className=\"listItem\">\n                                <span className=\"listItemTitle\">EPF & SOCSO</span>\n                                <span className=\"listItemAmount\">\n                                    <NumberFormat value={this.props.epfAndSocso} displayType={'text'} thousandSeparator={true} prefix={'RM '} />\n                                </span>\n                            </li>\n\n                            <li className=\"listItem\">\n                                <span className=\"listItemTitle\">Life & Medical Insurance</span>\n                                <span className=\"listItemAmount\">\n                                    <NumberFormat value={this.props.lifeAndMedical} displayType={'text'} thousandSeparator={true} prefix={'RM '} />\n                                </span>\n                            </li>\n\n                            <li className=\"listItem\">\n                                <span className=\"listItemTitle\">Lifestyle & Education</span>\n                                <span className=\"listItemAmount\">\n                                    <NumberFormat value={this.props.lifestyleAndEducation} displayType={'text'} thousandSeparator={true} prefix={'RM '} />\n                                 </span>\n                            </li>\n\n                            <li className=\"listItem\">\n                                <span className=\"listItemTitle\">Disabled Individual</span>\n                                <span className=\"listItemAmount\">\n                                    <NumberFormat value={this.props.disabled} displayType={'text'} thousandSeparator={true} prefix={'RM '} />\n                                </span>\n                            </li>\n\n                            <li className=\"listItem \">\n                                <span className=\"listItemTitle\">Marriage Relief</span>\n                                <span className=\"listItemAmount\">\n                                    <NumberFormat value={this.props.totalMarriedRelief} displayType={'text'} thousandSeparator={true} prefix={'RM '} />\n                                </span>\n                            </li>\n\n                            <li className=\"listItem summaryBorder\">\n                                <span className=\"listItemTitle\">Children Relief</span>\n                                <span className=\"listItemAmount\">\n                                    <NumberFormat value={this.props.totalChildrenRelief} displayType={'text'} thousandSeparator={true} prefix={'RM '} />\n                                </span>\n                            </li>\n\n                            <li className=\"listItem\">\n                            <h6 className=\"listItemTitle\">Total tax relief deductions : </h6>\n                            <span className=\"listItemAmount\">\n                                <b><NumberFormat value={this.props.totalTaxRelief} displayType={'text'} thousandSeparator={true} prefix={'RM '} /></b>\n                            </span>\n                            </li>\n                        </ul>\n                    </div>\n\n                </div>\n\n            <div className=\"chargeableIncome\">\n                <div className=\"totalTaxPaid\">\n                    <div className=\"chargeableBoxBorder\">\n                        <h3 >Net Chargeable Income :&nbsp; \n                            <NumberFormat value={this.props.netChargeableIncome} displayType={'text'} thousandSeparator={true} prefix={'RM '} />\n                        </h3>\n                    </div>\n                    <div className=\"taxPaid\">\n                        <h3>RM : {this.getTaxAmount(this.props.netChargeableIncome)}</h3>\n                        <span className=\"totalTaxPaidText\">Total tax to be paid this year</span>\n                    </div>\n                </div>\n\n                <div className=\"taxPaidStats\">\n                <ul className=\"taxPaidStatsList\">\n                    <li><img src=\"assets/info-button.svg\"></img>That's <b>RM {this.getMonthlyTaxPaid()}</b> a month!</li>\n                    <li><img src=\"assets/info-button.svg\"></img>Tax paid is <b>{this.getTaxPaid()}%</b> of your annual salary</li>\n                    <li><img src=\"assets/info-button.svg\"></img>You have saved <b>RM {this.getSavingsFromRelief()}</b> from your tax deductions</li>\n                    <br></br>\n                    <li><a className=\"summaryLink\" target=\"_blank\" href=\"http://www.hasil.gov.my/bt_goindex.php?bt_kump=5&bt_skum=1&bt_posi=2&bt_unit=5000&bt_sequ=11\" onClick={() => {this.handleClick()}}>How are your taxes calculated?</a></li>\n                </ul>\n            </div>\n\n            </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Summary;","import React, { Component, PropTypes } from 'react';\nimport Header from './Header';\nimport QuestionContainer from './QuestionContainer';\nimport Button from '@material-ui/core/Button';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport Summary from './Summary';\n\nclass ParentApp extends Component {\n\n    state = {\n        showSummary: false,\n        \n        grossIncome: 0,\n        otherIncome: 0,\n        totalIncome: 0,\n\n        lifeInsuranceRelief: 0,\n        medicalInsuranceRelief: 0,\n        lifestyleRelief: 0,\n        educationRelief: 0,\n        disabledIndividualRelief: 0,\n        prsRelief: 0,\n        totalIndividualRelief: 0,\n\n        totalMarriedRelief: 0,\n        married: false,\n        disabledSpouse: 0,\n        workingSpouse: 0,\n\n        totalChildrenRelief: 0,\n        children: false,\n        childrenAmount:0,\n        disabledChildrenAmount:0,\n        schoolChildren: 0,\n        collegeChildren: 0,\n        uniChildren: 0,\n        hasDisabledChildren: false,\n        disabledChildren: 0,\n        disabledUniChildren: 0,\n        schoolChildrenToDisplay: 0,\n        collegeChildrenToDisplay: 0,\n        uniChildrenToDisplay: 0,\n        sspnRelief: 0,\n        childcareRelief: 0,\n        \n        epfAndSocso: 4250,\n        selfDependent: 9000,\n    }\n\n    getGrossIncome = (value, id, cap) => {\n        this.setState ( prevState => ({\n            grossIncome: value,\n            totalIncome: prevState.totalIncome - prevState.grossIncome + value,\n        }))\n    }\n\n    getOtherIncome = (value, id, cap) => {\n        this.setState ( prevState => ({\n            otherIncome: value,\n            totalIncome: prevState.totalIncome - prevState.otherIncome + value,\n        }))\n    }\n\n    getTotalRelief = (value, id, cap) => {\n            console.log(value)\n            console.log(id)\n            console.log(cap)\n\n            var cappedRelief = 0\n\n            if (cap == 0) {\n                cappedRelief = value\n            } else if (value > cap) {\n                cappedRelief = cap\n            } else {\n                cappedRelief = value\n            }\n\n            this.setState ( prevState => ({\n                [id]: cappedRelief,\n            }))\n\n            this.setState ( prevState => ({\n                totalIndividualRelief: prevState.lifeInsuranceRelief + prevState.medicalInsuranceRelief + prevState.lifestyleRelief +\n                                        prevState.educationRelief + prevState.disabledIndividualRelief\n            }))\n\n            this.setState ( prevState => ({\n                totalMarriedRelief: prevState.disabledSpouse + prevState.workingSpouse\n            }))\n\n            this.setState ( prevState => ({\n                totalChildrenRelief: (prevState.schoolChildren * 2000) + (prevState.collegeChildren * 2000) + (prevState.uniChildren * 8000) \n                            + (prevState.disabledChildren * 6000) + (prevState.disabledUniChildren * 8000) + prevState.sspnRelief + prevState.childcareRelief,\n\n                schoolChildrenToDisplay: prevState.childrenAmount - prevState.collegeChildren - prevState.uniChildren,\n                collegeChildrenToDisplay: prevState.childrenAmount - prevState.schoolChildren - prevState.uniChildren,\n                uniChildrenToDisplay: prevState.childrenAmount - prevState.schoolChildren - prevState.collegeChildren,\n            }))\n        \n    }\n\n    showSummarySection = () => {\n        this.setState ({\n            showSummary: true\n        })\n    }\n\n    updateTotalIncome = (value) => {\n        this.setState ({\n            totalIncome: value\n        })\n    }\n\n    handleOnYesMarriedClicked = () => {\n        this.setState( prevState => ({\n            married: true,\n            workingSpouse: 4000,\n            totalMarriedRelief: prevState.disabledSpouse + 4000\n        }))\n    }\n\n    handleOnNoMarriedClicked = () => {\n        this.setState ({\n            married: false,\n            totalMarriedRelief: 0,\n            disabledSpouse: 0,\n            workingSpouse: 0,\n        })\n    }\n\n    handleOnYesChildrenClicked = () => {\n        this.setState ({\n            children: true\n        })\n    }\n\n    handleOnNoChildrenClicked = () => {\n        this.setState ({\n            children: false,\n            totalChildrenRelief: 0,\n            childrenAmount:0,\n            schoolChildren: 0,\n            collegeChildren: 0,\n            uniChildren: 0,\n            disabledChildren: 0,\n            disabledUniChildren: 0,\n        })\n    }\n\n    hasDisabledChildrenFunc = (hasDisabled) => {\n        this.setState ({\n            hasDisabledChildren: hasDisabled,\n            disabledChildren: 0,\n            disabledUniChildren: 0,\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"parentApp\">\n            <Header />\n            <QuestionContainer \n            totalIncome={this.state.totalIncome}\n            totalIndividualRelief={this.state.totalIndividualRelief} \n            getGrossIncome={this.getGrossIncome}\n            getOtherIncome={this.getOtherIncome}\n            getTotalRelief={this.getTotalRelief}\n\n            totalMarriedRelief={this.state.totalMarriedRelief}\n            married={this.state.married}\n            handleOnYesMarriedClicked={this.handleOnYesMarriedClicked}\n            handleOnNoMarriedClicked={this.handleOnNoMarriedClicked}\n            \n            totalChildrenRelief={this.state.totalChildrenRelief}\n            children={this.state.children}\n            handleOnYesChildrenClicked={this.handleOnYesChildrenClicked}\n            handleOnNoChildrenClicked={this.handleOnNoChildrenClicked}\n            childrenAmount={this.state.childrenAmount}\n            schoolChildrenToDisplay={this.state.schoolChildrenToDisplay}\n            collegeChildrenToDisplay={this.state.collegeChildrenToDisplay}\n            uniChildrenToDisplay={this.state.uniChildrenToDisplay}\n            hasDisabledChildren={this.state.hasDisabledChildren}\n            hasDisabledChildrenFunc={this.hasDisabledChildrenFunc}\n            disabledChildren={this.state.disabledChildren}\n\n            />\n\n            <div className=\"viewSummaryButton\">\n                {this.state.showSummary ?\n                <Summary\n                totalIncome={this.state.totalIncome}\n        \n                lifeAndMedical= {this.state.lifeInsuranceRelief + this.state.medicalInsuranceRelief}\n                lifestyleAndEducation = {this.state.lifestyleRelief + this.state.educationRelief}\n                disabled= {this.state.disabledIndividualRelief}\n                totalTaxRelief={this.state.totalIndividualRelief + this.state.epfAndSocso + this.state.selfDependent}\n                epfAndSocso={this.state.epfAndSocso}\n                selfDependent={this.state.selfDependent}\n                totalMarriedRelief={this.state.totalMarriedRelief}\n                totalChildrenRelief={this.state.totalChildrenRelief}\n\n                netChargeableIncome={this.state.totalIncome - this.state.totalIndividualRelief - this.state.epfAndSocso - this.state.selfDependent \n                    - this.state.totalMarriedRelief - this.state.totalChildrenRelief} \n                />\n                  : \n                <Button variant=\"contained\" color=\"primary\" size=\"large\" startIcon={<MonetizationOnIcon />} onClick={this.showSummarySection}>\n                View Summary\n                </Button>         \n            }\n\n            </div>\n                \n            </div> \n        );\n    }\n  \n  }\n\n  export default ParentApp;","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport ProTip from './ProTip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Header from './Header';\nimport QuestionContainer from './QuestionContainer';\nimport ParentApp from './ParentApp';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  box: {\n    color: 'blue',\n  }\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  return (\n    <ParentApp />\n    // <Container maxWidth=\"false\">\n    //   <Box my={4} className={classes.box}>\n    //     <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n    //       Create React App v4-beta example\n    //     </Typography>\n    //     <ProTip />\n    //     <Copyright />\n    //   </Box>\n    // </Container>\n  );\n}\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}